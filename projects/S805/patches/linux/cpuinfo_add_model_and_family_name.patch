diff --git a/arch/arm/kernel/setup.c b/arch/arm/kernel/setup.c
index e15a01a..043d9ca 100644
--- a/arch/arm/kernel/setup.c
+++ b/arch/arm/kernel/setup.c
@@ -58,6 +58,7 @@
 
 #include "atags.h"
 
+#include "../plat-meson/include/plat/cpu.h"
 
 #if defined(CONFIG_FPE_NWFPE) || defined(CONFIG_FPE_FASTFPE)
 char fpe_type[8];
@@ -905,6 +906,19 @@ static int c_show(struct seq_file *m, void *v)
 {
 	int i;
 
+	unsigned int meson_major;
+	const char *meson_name, *meson_family;
+	static const struct meson_package_id {
+		const char *name;
+		const char *family;
+		unsigned int major_id;
+	} meson_packages[] = {
+		{ "AML8726-MX", "Meson6",    MESON_CPU_MAJOR_ID_M6},
+		{ "S802",       "Meson8",    MESON_CPU_MAJOR_ID_M8},
+		{ "S805",       "Meson8b",   MESON_CPU_MAJOR_ID_M8B},
+		{ "S812",       "Meson8m2",  MESON_CPU_MAJOR_ID_M8M2},
+	};
+
 	seq_printf(m, "Processor\t: %s rev %d (%s)\n",
 		   cpu_name, read_cpuid_id() & 15, elf_platform);
 
@@ -916,9 +930,6 @@ static int c_show(struct seq_file *m, void *v)
 		 * "processor".  Give glibc what it expects.
 		 */
 		seq_printf(m, "processor\t: %d\n", i);
-		seq_printf(m, "BogoMIPS\t: %lu.%02lu\n\n",
-			   per_cpu(cpu_data, i).loops_per_jiffy / (500000UL/HZ),
-			   (per_cpu(cpu_data, i).loops_per_jiffy / (5000UL/HZ)) % 100);
 	}
 #else /* CONFIG_SMP */
 	seq_printf(m, "BogoMIPS\t: %lu.%02lu\n",
@@ -956,7 +967,17 @@ static int c_show(struct seq_file *m, void *v)
 
 	seq_puts(m, "\n");
 
-	seq_printf(m, "Hardware\t: %s\n", machine_name);
+	meson_major = system_serial_high >> 24;
+	meson_name = "unkown_soc"; /* Give it a default name */
+	meson_family = "unkown_family"; /* Give it a default family */
+
+	for (i = 0 ; i < ARRAY_SIZE(meson_packages) ; ++i) {
+		if (meson_packages[i].major_id == meson_major) {
+			meson_name = meson_packages[i].name;
+			meson_family = meson_packages[i].family;
+		}
+	}
+	seq_printf(m, "Hardware\t: Amlogic %s (%s)\n", meson_name, meson_family);
 	seq_printf(m, "Revision\t: %04x\n", system_rev);
 	seq_printf(m, "Serial\t\t: %08x%08x\n",
 		   system_serial_high, system_serial_low);
