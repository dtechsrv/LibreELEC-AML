diff --git a/arch/arm64/boot/dts/amlogic/gxbb_p200_k1_plus.dts b/arch/arm64/boot/dts/amlogic/gxbb_p200_k1_plus.dts
new file mode 100644
index 0000000..993ae95
--- /dev/null
+++ b/arch/arm64/boot/dts/amlogic/gxbb_p200_k1_plus.dts
@@ -0,0 +1,84 @@
+#include "gxbb_p200.dts"
+
+/{
+	le-dt-id = "gxbb_p200_k1_plus";
+	ethmac: ethernet@0xc9410000 {
+		compatible = "amlogic, gxbb-rmii-dwmac";
+		phy-mode= "rmii";
+		mc_val = <0x1800>;
+	};
+
+	/delete-node/ bt-dev;
+
+	wifi {
+		irq_trigger_type = "GPIO_IRQ_HIGH";
+		/delete-property/ dhd_static_buf;
+		power_on_pin2 = <&gpio	   GPIOX_20	   GPIO_ACTIVE_HIGH>;
+	};
+
+	sdio {
+		interrupts = <	0 216 4>;
+	};
+
+	dwc2_a {
+		port-id-mode = <0>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
+		/delete-property/ gpio-vbus-power;
+		/delete-property/ gpios;
+	};
+
+	dvb {
+		compatible = "amlogic,dvb";
+		dev_name = "dvb";
+		status = "okay";
+		fec_reset_gpio-gpios = <&gpio GPIOY_13 GPIO_ACTIVE_HIGH>;
+		power_ctrl_gpio-gpios = <&gpio GPIOY_11 GPIO_ACTIVE_LOW>;
+		//"parallel","serial","disable"
+		ts0 = "parallel";
+		ts0_control = <0>;
+		ts0_invert = <0>;
+		pinctrl-names = "p_ts0", "s_ts0";
+		pinctrl-0 = <&dvb_p_ts0_pins>;
+		pinctrl-1 = <&dvb_s_ts0_pins>;
+		resets = <&clock GCLK_IDX_DEMUX
+				&clock GCLK_IDX_ASYNC_FIFO
+				&clock GCLK_IDX_AHB_ARB0
+				&clock GCLK_IDX_HIU_PARSER_TOP>;
+		reset-names = "demux", "asyncfifo", "ahbarb0", "uparsertop";
+	};
+
+	dvbfe {
+		compatible = "amlogic,dvbfe";
+		//dev_name = "avl6211";
+		status = "okay";
+		dtv_demod0 = "Avl6211";
+		dtv_demod0_i2c_adap_id = <1>;
+		dtv_demod0_i2c_addr = <0xC0>;
+		dtv_demod0_reset_value = <0>;
+		//dtv_demod0_reset_gpio = <&gpio GPIOY_13 GPIO_ACTIVE_HIGH>;
+		dtv_demod0_reset_gpio-gpios = <&gpio GPIOY_13 GPIO_ACTIVE_LOW>;
+		dtv_demod0_power_gpio-gpios = <&gpio GPIOY_11 GPIO_ACTIVE_LOW>;
+		fe0_dtv_demod = <0>;
+		fe0_ts = <0>;
+		fe0_dev = <0>;
+	};
+};
+
+&i2c_a {
+	status = "okay";
+};
+
+&i2c_b {
+	status = "okay";
+};
+
+&i2c_c {
+	status = "okay";
+};
+
+&i2c_d {
+	status = "okay";
+};
+ 
+&i2c_slave {
+	status = "disabled";
+};
